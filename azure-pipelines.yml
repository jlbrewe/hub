# Azure Pipelines config
#
# For docs on multi-platform setup see:
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/get-started-multiplatform?view=azure-devops
# For docs on building and pushing Docker images
#   https://docs.microsoft.com/azure/devops/pipelines/languages/docker
# For a guide to triggering build on tags, see:
#   https://medium.com/faun/azure-pipelines-and-git-tag-quirks-1daaba61713a

trigger:
  branches:
    include:
    - master
    - refs/tags/*

jobs:
  - job: test
    condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
        displayName: Install Python

      - task: NodeTool@0
        inputs:
          versionSpec: 12.x
        displayName: Install Node.js

      - script: make lint
        displayName: Run linting

      - script: make cover
        displayName: Run unit tests

      - script: bash <(curl -s https://codecov.io/bash)
        condition: succeeded()
        displayName: Upload coverage

      - script: |
          set -e
          make -C manager create-devdb-sqlite static
          make -C manager run &
          make -C manager snaps
          make -C clients api.yaml
          kill %1
        displayName: Run end-to-end tests and api.yaml for generating clients

      - task: TwineAuthenticate@1
        displayName: Authenticate with Twine (for publishing Python client)
        inputs:
          pythonUploadServiceConnection: PyPI

      - script: |
          npm ci
          npx semantic-release
        env:
          GIT_AUTHOR_NAME: Stencila CI Bot
          GIT_AUTHOR_EMAIL: ci@stenci.la
          GIT_COMMITTER_NAME: Stencila CI Bot
          GIT_COMMITTER_EMAIL: ci@stenci.la
          GITHUB_TOKEN: $(GITHUB_TOKEN)
        displayName: Tag and release

      - script: |
          mkdir -p pages/manager/snaps
          mv manager/snaps/* pages/manager/snaps
          npx gh-pages --repo https://$(GITHUB_TOKEN)@github.com/stencila/hub.git -f -d pages
        env:
          GIT_AUTHOR_NAME: Stencila CI Bot
          GIT_AUTHOR_EMAIL: ci@stenci.la
          GIT_COMMITTER_NAME: Stencila CI Bot
          GIT_COMMITTER_EMAIL: ci@stenci.la
        displayName: Publish docs

  - job: deploy
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    pool:
      vmImage: ubuntu-latest
    steps:

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
        displayName: Install Python

      - script: make -C manager static
        displayName: Build manager static assets
    
      - task: DockerCompose@0
        displayName: Build images
        inputs:
          action: Build services
          dockerComposeFile: docker-compose.yaml
          includeLatestTag: true
          includeSourceTags: true

      - task: DockerCompose@0
        displayName: Push images
        inputs:
          action: Push services
          containerregistrytype: Container Registry
          dockerRegistryEndpoint: DockerHub
          dockerComposeFile: docker-compose.yaml
          includeLatestTag: true
          includeSourceTags: true
