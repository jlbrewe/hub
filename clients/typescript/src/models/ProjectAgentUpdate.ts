/* tslint:disable */
/* eslint-disable */

/**
 * Stencila Hub Typescript Client
 *
 * This file is auto generated by OpenAPI Generator. Do not edit manually.
 */
import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProjectAgentUpdate
 */
export interface ProjectAgentUpdate {
    /**
     * 
     * @type {number}
     * @memberof ProjectAgentUpdate
     */
    readonly id?: number;
    /**
     * Role the user or team has within the project.
     * @type {string}
     * @memberof ProjectAgentUpdate
     */
    role: ProjectAgentUpdateRoleEnum;
    /**
     * Project to which the user or team is being given access to.
     * @type {number}
     * @memberof ProjectAgentUpdate
     */
    readonly project?: number;
    /**
     * A user given access to the project.
     * @type {number}
     * @memberof ProjectAgentUpdate
     */
    readonly user?: number;
    /**
     * A team given access to the project.
     * @type {number}
     * @memberof ProjectAgentUpdate
     */
    readonly team?: number;
}

export function ProjectAgentUpdateFromJSON(json: any): ProjectAgentUpdate {
    return ProjectAgentUpdateFromJSONTyped(json, false);
}

export function ProjectAgentUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectAgentUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'role': json['role'],
        'project': !exists(json, 'project') ? undefined : json['project'],
        'user': !exists(json, 'user') ? undefined : json['user'],
        'team': !exists(json, 'team') ? undefined : json['team'],
    };
}

export function ProjectAgentUpdateToJSON(value?: ProjectAgentUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'role': value.role,
    };
}

/**
* @export
* @enum {string}
*/
export enum ProjectAgentUpdateRoleEnum {
    Reader = 'READER',
    Reviewer = 'REVIEWER',
    Editor = 'EDITOR',
    Author = 'AUTHOR',
    Manager = 'MANAGER',
    Owner = 'OWNER'
}


