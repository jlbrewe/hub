# Azure Pipelines config
#
# For docs on multi-platform setup see:
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/get-started-multiplatform?view=azure-devops
# For docs on building and pushing Docker images
#   https://docs.microsoft.com/azure/devops/pipelines/languages/docker
# For a guide to triggering build on tags, see:
#   https://medium.com/faun/azure-pipelines-and-git-tag-quirks-1daaba61713a

trigger:
  branches:
    include:
    - master
    - refs/tags/*

jobs:
  - job: test
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
  
      - script: make lint
        displayName: Lint

      - script: make snaps
        displayName: Snapshots

      - script: make cover
        displayName: Test

      - script: bash <(curl -s https://codecov.io/bash)
        condition: succeeded()
        displayName: Upload coverage

  - job: release
    dependsOn: test
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: 12.x
        displayName: Install Node.js
        
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
        displayName: Install Python

      - script: npm ci
        displayName: Install Node.js dependencies for build

      - script: npm run build
        displayName: Build CSS and JS

      - script: make -C director static
        displayName: Collect static files

      - script: |
          npm ci
          npx semantic-release
        env:
          GIT_AUTHOR_NAME: Stencila CI Bot
          GIT_AUTHOR_EMAIL: ci@stenci.la
          GIT_COMMITTER_NAME: Stencila CI Bot
          GIT_COMMITTER_EMAIL: ci@stenci.la
          GITHUB_TOKEN: $(GITHUB_TOKEN)
          NPM_TOKEN: $(NPM_TOKEN)
        displayName: Tag and release

  - job: deploy
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    pool:
      vmImage: ubuntu-latest
    steps:
    
      - task: DockerCompose@0
        displayName: Build images
        inputs:
          action: Build services
          dockerComposeFile: docker-compose.yaml
          includeLatestTag: true
          includeSourceTags: true

      - task: DockerCompose@0
        displayName: Push images
        inputs:
          action: Push services
          containerregistrytype: Container Registry
          dockerRegistryEndpoint: DockerHub
          dockerComposeFile: docker-compose.yaml
          includeLatestTag: true
          includeSourceTags: true
