# Generated by Django 3.0.8 on 2020-07-08 22:03

from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import imagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The time the account was created.')),
                ('name', models.SlugField(help_text='Name of the account. Lowercase and no spaces or leading numbers. Will be used in URLS e.g. https://hub.stenci.la/awesome-org', max_length=64, unique=True)),
                ('image', imagefield.fields.ImageField(blank=True, height_field='image_height', help_text='Image for the account.', null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/local/media', location='/home/nokome/stencila/source/hub/manager/../storage/data/media'), upload_to='accounts/images', width_field='image_width')),
                ('display_name', models.CharField(blank=True, help_text='Name to display in account profile.', max_length=256, null=True)),
                ('location', models.CharField(blank=True, help_text='Location to display in account profile.', max_length=256, null=True)),
                ('website', models.URLField(blank=True, help_text='URL to display in account profile.', null=True)),
                ('email', models.EmailField(blank=True, help_text='Email to display in account profile.', max_length=254, null=True)),
                ('theme', models.TextField(blank=True, help_text='The name of the theme to use as the default when generating content for this account.', null=True)),
                ('hosts', models.TextField(blank=True, help_text='A space separated list of valid hosts for the account. Used for setting Content Security Policy headers when serving content for this account.', null=True)),
                ('image_width', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('image_height', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('image_ppoi', imagefield.fields.PPOIField(default='0.5x0.5', max_length=20)),
                ('creator', models.ForeignKey(blank=True, help_text='The user who created the account.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accounts_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountTier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the tier.', max_length=64)),
                ('orgs_created', models.IntegerField(default=10, help_text='The maximum number organizations that a user can create.', verbose_name='Organizations created')),
                ('account_users', models.IntegerField(default=100, help_text='The maximum number of users that can be added to the account.', verbose_name='Users')),
                ('account_teams', models.IntegerField(default=5, help_text='The maximum number of teams that can be added to the account.', verbose_name='Teams')),
                ('projects_public', models.IntegerField(default=100, help_text='The maximum number of public projects that an account can have.', verbose_name='Public projects')),
                ('projects_private', models.IntegerField(default=10, help_text='The maximum number of private projects that an account can have.', verbose_name='Private projects')),
                ('storage_working', models.IntegerField(default=1000000000.0, help_text='The maximum storage in project working directories.', verbose_name='Working storage')),
                ('storage_snapshots', models.IntegerField(default=5000000000.0, help_text='The maximum storage in project snapshots.', verbose_name='Snapshot storage')),
                ('job_runtime_month', models.IntegerField(default=1000, help_text='The maximum number of job minutes per month.', verbose_name='Job minutes')),
            ],
        ),
        migrations.CreateModel(
            name='AccountUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('MEMBER', 'Member'), ('MANAGER', 'Manager'), ('OWNER', 'Owner')], help_text='Role the user has within the account.', max_length=32)),
                ('account', models.ForeignKey(help_text='Account to which the user belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='users', to='accounts.Account')),
                ('user', models.ForeignKey(help_text='User added to the account.', on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(help_text='Name of the team.')),
                ('description', models.TextField(blank=True, help_text='Team description.', null=True)),
                ('account', models.ForeignKey(help_text='Account to which the team belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='accounts.Account')),
                ('members', models.ManyToManyField(help_text='Team members.', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='tier',
            field=models.ForeignKey(default=1, help_text='The tier of the account. Determines its quota limits.', on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.AccountTier'),
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.OneToOneField(blank=True, help_text='The user for this account. Only applies to personal accounts.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personal_account', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='accountuser',
            constraint=models.UniqueConstraint(fields=('account', 'user'), name='accountuser_unique_account_user'),
        ),
        migrations.AddConstraint(
            model_name='accountteam',
            constraint=models.UniqueConstraint(fields=('account', 'name'), name='accountteam_unique_account_name'),
        ),
    ]
